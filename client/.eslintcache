[{"/app/src/App.js":"1","/app/src/index.js":"2","/app/src/reportWebVitals.js":"3","/app/src/Helpers.js":"4","/app/src/component/Task.js":"5","/app/src/component/YvesMUIForm.js":"6","/app/src/component/YvesMUITable.js":"7","/app/src/component/YvesMUIButtons.js":"8","/app/src/component/YvesMUIFilters.js":"9","/app/src/api/TaskApi.js":"10"},{"size":123,"mtime":1609718433377,"results":"11","hashOfConfig":"12"},{"size":495,"mtime":1609668448197,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609385630771,"results":"14","hashOfConfig":"12"},{"size":348,"mtime":1609698933247,"results":"15","hashOfConfig":"12"},{"size":10343,"mtime":1609744760933,"results":"16","hashOfConfig":"12"},{"size":7089,"mtime":1609742514132,"results":"17","hashOfConfig":"12"},{"size":4563,"mtime":1609685428715,"results":"18","hashOfConfig":"12"},{"size":1289,"mtime":1609688354776,"results":"19","hashOfConfig":"12"},{"size":7217,"mtime":1609719269319,"results":"20","hashOfConfig":"12"},{"size":562,"mtime":1609719026120,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19yot3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/app/src/App.js",[],["48","49"],"/app/src/index.js",[],"/app/src/reportWebVitals.js",[],"/app/src/Helpers.js",["50"],"export const ucwords = (str) => {\n\treturn str.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\n\t\treturn letter.toUpperCase();\n\t});\n};\n\nexport const validate = (key, str) => {\n\ttry {\n\t\tif (!str || str === \"\" || str === undefined)\n\t\t\tthrow `${key.toUpperCase} is empty`;\n\t\treturn true;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\treturn err;\n\t}\n};\n","/app/src/component/Task.js",["51","52","53","54","55","56","57","58","59"],"/app/src/component/YvesMUIForm.js",["60"],"/app/src/component/YvesMUITable.js",["61","62"],"import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport ActionButtons from \"./YvesMUIButtons\";\nimport clsx from \"clsx\";\nimport {\n\tTableContainer,\n\tTable,\n\tTableBody,\n\tTableRow,\n\tTableCell,\n\tmakeStyles,\n\tFormControl,\n\tSelect,\n\tMenuItem,\n\tGrid,\n\tFormHelperText,\n} from \"@material-ui/core\";\n\nexport default function YvesMUITable({\n\trows,\n\tfilter,\n\theaders,\n\tpage_count,\n\thandleChangePage,\n\thandleChangeRowsPerPage,\n\twith_actions = null,\n}) {\n\tconst useStyles = makeStyles((theme) => ({\n\t\tpaper: {\n\t\t\tmaxWidth: \"1600px\",\n\t\t\tmargin: \"auto\",\n\t\t\toverflow: \"hidden\",\n\t\t},\n\t\ttable_cell: {\n\t\t\tmaxWidth: \"340px\",\n\t\t},\n\t\tcontentWrapper: {\n\t\t\tmargin: \"40px 16px\",\n\t\t},\n\t\tcell_break_word: { wordWrap: \"break-word\" },\n\t\tbackdrop: {\n\t\t\tzIndex: theme.zIndex.drawer + 1,\n\t\t\tcolor: \"#fff\",\n\t\t},\n\t\tth: {\n\t\t\tfontWeight: \"bold\",\n\t\t},\n\t\ttd: {\n\t\t\tpadding: \"8px\",\n\t\t\tfontSize: \"12px\",\n\t\t\tmaxWidth: \"340px\",\n\t\t},\n\t\tselectEmpty: {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t\tgrid_root: {\n\t\t\tflexGrow: 1,\n\t\t\tmarginTop: \"20px\",\n\t\t},\n\t\tpagination: {\n\t\t\t\"& > *\": {\n\t\t\t\tmarginTop: theme.spacing(2),\n\t\t\t},\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\tconst checkStringLength = (str) => {\n\t\tif (!str) return \"\";\n\t\treturn str.length > 50 ? classes.cell_break_word : \"\";\n\t};\n\n\treturn (\n\t\t<div className={classes.contentWrapper}>\n\t\t\t{rows && rows.length > 0 ? (\n\t\t\t\t<TableContainer>\n\t\t\t\t\t<Table size=\"small\">\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t{headers.map((header, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t\t\t\t\tcheckStringLength(header),\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.td,\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.th\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"th\"\n\t\t\t\t\t\t\t\t\t\t\tscope=\"row\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{rows.map((row, idx) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={idx}>\n\t\t\t\t\t\t\t\t\t\t{Object.entries(row).map((col, index) => {\n\t\t\t\t\t\t\t\t\t\t\tconst col_name = col[0];\n\n\t\t\t\t\t\t\t\t\t\t\tconst value = col[1];\n\n\t\t\t\t\t\t\t\t\t\t\tif (col_name === \"id\") return null;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(checkStringLength(value), classes.td)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"td\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tscope=\"row\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t<TableCell component=\"td\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t{with_actions\n\t\t\t\t\t\t\t\t\t\t\t\t? with_actions.map((action, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst { render: Render } = action;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (action.type === \"custom\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// return (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t<Render\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\tonClick={action.handleAction.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\trow,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\taction.type\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ActionButtons\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taction={action}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={row}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t<Grid container className={classes.grid_root}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t\t\t\t\t\t{/* <InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\t\t\t\t\t\tRows per page:\n\t\t\t\t\t\t\t\t\t\t</InputLabel> */}\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={filter.rows_per_page}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeRowsPerPage}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={10}>10</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={15}>15</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={20}>20</MenuItem>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t<FormHelperText>Rows per page</FormHelperText>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\t\tonChange={handleChangePage}\n\t\t\t\t\t\t\t\t\t\tcount={page_count}\n\t\t\t\t\t\t\t\t\t\tdefaultPage={1}\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tshowFirstButton\n\t\t\t\t\t\t\t\t\t\tshowLastButton\n\t\t\t\t\t\t\t\t\t\tclassName={classes.pagination}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</TableContainer>\n\t\t\t) : (\n\t\t\t\t<Typography color=\"textSecondary\" align=\"center\">\n\t\t\t\t\tNo data\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","/app/src/component/YvesMUIButtons.js",["63","64"],"import React from \"react\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport VisibilitySharpIcon from \"@material-ui/icons/VisibilitySharp\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nexport default function ActionButtons({ action, data }) {\n\tconst useStyles = makeStyles((theme) => ({\n\t\tpaper: {\n\t\t\tmaxWidth: \"1600px\",\n\t\t\tmargin: \"auto\",\n\t\t\toverflow: \"hidden\",\n\t\t},\n\t\tbutton: {\n\t\t\tmargin: \"0 5px\",\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\tconst renderActionButtons = () => {\n\t\tswitch (action.type) {\n\t\t\tcase \"view\":\n\t\t\t\treturn (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label={action.type}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={action.handleAction.bind(this, data, action.type)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<VisibilitySharpIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t);\n\t\t\tcase \"edit\":\n\t\t\t\treturn (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label={action.type}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={action.handleAction.bind(this, data, action.type)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t);\n\n\t\t\tcase \"delete\":\n\t\t\t\treturn (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label={action.type}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={action.handleAction.bind(this, data, action.type)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t);\n\t\t}\n\t};\n\n\treturn renderActionButtons();\n}\n","/app/src/component/YvesMUIFilters.js",["65"],"import React, { Fragment } from \"react\";\n\nimport {\n\tmakeStyles,\n\tCheckbox,\n\tGrid,\n\tFormControlLabel,\n\tRadioGroup,\n\tRadio,\n\tFormLabel,\n\tBox,\n\tTypography,\n\tSelect,\n\tMenuItem,\n\tInputLabel,\n\tFormControl,\n\tInputAdornment,\n\tButton,\n\tIconButton,\n} from \"@material-ui/core\";\nimport \"date-fns\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\n\nexport default function TableFilters({\n\tfilters,\n\textra_buttons = null,\n\thandleFilterChange,\n}) {\n\tconst useStyles = makeStyles((theme) => ({\n\t\tpaper: {\n\t\t\tpadding: theme.spacing(2),\n\t\t\twidth: \"100%\",\n\t\t},\n\n\t\tselect_capitalize: {\n\t\t\ttextTransform: \"capitalize\",\n\t\t},\n\t\ttxt_capitalize: {\n\t\t\ttextTransform: \"capitalize\",\n\t\t},\n\t\tform: {\n\t\t\twidth: \"100%\", // Fix IE 11 issue.\n\t\t\tmarginTop: theme.spacing(3),\n\t\t},\n\n\t\tformControl: {\n\t\t\tmargin: theme.spacing(1),\n\t\t\tminWidth: 120,\n\t\t},\n\t\ttoolbar: { backgroundColor: \"#ffffff\", padding: theme.spacing(2) },\n\t\tselect: {\n\t\t\twidth: \"100%\",\n\t\t\ttextTransform: \"capitalize\",\n\t\t},\n\t\tbuttons: {\n\t\t\tmargin: \"5px\",\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\n\tconst createFormFields = (field, index) => {\n\t\treturn field ? (\n\t\t\t<Grid key={index} item>\n\t\t\t\t{chooseField(field)}\n\t\t\t</Grid>\n\t\t) : (\n\t\t\t\"\"\n\t\t);\n\t};\n\tconst chooseField = (field) => {\n\t\tswitch (field.type) {\n\t\t\tcase \"text\":\n\t\t\t\treturn createTexfield(field);\n\t\t\tcase \"search\":\n\t\t\t\treturn createSearchField(field);\n\t\t\tcase \"select\":\n\t\t\t\treturn createSelectField(field);\n\t\t\tcase \"date_picker\":\n\t\t\t\treturn createDatePicker(field);\n\t\t\tcase \"check_box\":\n\t\t\t\treturn createCheckbox(field);\n\t\t\tcase \"radio_group\":\n\t\t\t\treturn createRadioGroup(field);\n\t\t}\n\t};\n\n\tconst createCheckbox = (field) => {\n\t\treturn (\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={field.value}\n\t\t\t\t\t\tonChange={handleFilterChange.bind(this, field)}\n\t\t\t\t\t\tname={field.key}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel={field.label}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst createSearchField = (field) => {\n\t\treturn (\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"input-withcreate-icon-textfield\"\n\t\t\t\t\tlabel={field.label}\n\t\t\t\t\tInputProps={{\n\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t<SearchIcon color=\"inherit\" />\n\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t\tonBlur={handleFilterChange.bind(this, field)}\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t);\n\t};\n\n\tconst createSelectField = (field) => {\n\t\treturn (\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<InputLabel\n\t\t\t\t\tclassName={classes.select_capitalize}\n\t\t\t\t\tid=\"demo-simple-select-label\"\n\t\t\t\t>\n\t\t\t\t\t{field.label\n\t\t\t\t\t\t? field.label.replace(\"_\", \" \").toLowerCase()\n\t\t\t\t\t\t: field.key.replace(\"_\", \" \").toLowerCase()}\n\t\t\t\t</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tclassName={classes.select}\n\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\tvalue={field.value}\n\t\t\t\t\tonChange={handleFilterChange.bind(this, field)}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem key={0} value=\"all\">\n\t\t\t\t\t\tAll\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t{field.items.map((item, item_idx) => {\n\t\t\t\t\t\tlet label = \"\";\n\t\t\t\t\t\tif (item.value) label = item.value;\n\t\t\t\t\t\tif (item.name) label = item.name;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tclassName={classes.select_capitalize}\n\t\t\t\t\t\t\t\tkey={item_idx}\n\t\t\t\t\t\t\t\tvalue={item[field.key_value]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{label.replace(\"_\", \" \").toLowerCase()}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t);\n\t};\n\n\tconst createTexfield = (field) => {\n\t\treturn (\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<TextField\n\t\t\t\t\tclassName={classes.txt_capitalize}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tname={field.key}\n\t\t\t\t\tonChange={handleFilterChange.bind(this, field)}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tdefaultValue={field.value}\n\t\t\t\t\tid={field.key}\n\t\t\t\t\tlabel={field.key.replace(/_/g, \" \")}\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t);\n\t};\n\n\tconst createDatePicker = (field) => {\n\t\treturn field.show ? (\n\t\t\t<TextField\n\t\t\t\tlabel={field.label}\n\t\t\t\ttype=\"datetime-local\"\n\t\t\t\tdefaultValue={field.value}\n\t\t\t\tclassName={classes.textField}\n\t\t\t\tonChange={handleFilterChange.bind(this, field)}\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true,\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : (\n\t\t\t\"\"\n\t\t);\n\t};\n\n\tconst createRadioGroup = (field) => {\n\t\treturn (\n\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t<FormLabel component=\"legend\">{field.label}</FormLabel>\n\t\t\t\t<RadioGroup\n\t\t\t\t\taria-label={field.key}\n\t\t\t\t\tname={field.key}\n\t\t\t\t\tvalue={field.value}\n\t\t\t\t\tonChange={handleFilterChange.bind(this, field)}\n\t\t\t\t>\n\t\t\t\t\t<Box display={field.display}>\n\t\t\t\t\t\t{field.radios.map((radio) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tvalue={radio.value}\n\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\tlabel={radio.label}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Box>\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\t\t);\n\t};\n\n\tconst createExtraButtons = (extra_buttons) => {\n\t\tconst refund_button = extra_buttons.find((button) => {\n\t\t\treturn button.type === \"refund_button\";\n\t\t});\n\n\t\tconst create_button = extra_buttons.find((button) => {\n\t\t\treturn button.type === \"create_button\";\n\t\t});\n\n\t\tconst clear_filter = extra_buttons.find((button) => {\n\t\t\treturn button.type === \"clear_filter\";\n\t\t});\n\t\tconst generate_report = extra_buttons.find((button) => {\n\t\t\treturn button.type === \"generate_report\";\n\t\t});\n\t\treturn (\n\t\t\t<Grid item>\n\t\t\t\t{refund_button ? (\n\t\t\t\t\t<Tooltip title={refund_button.title}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={refund_button.trigger.bind(this, refund_button.data)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ReplayIcon color=\"inherit\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t\t{create_button ? (\n\t\t\t\t\t<Tooltip title={create_button.title}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={create_button.trigger.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tcreate_button.mode\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AddBoxIcon color=\"inherit\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t\t{generate_report ? (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<Tooltip title={generate_report.title}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tstartIcon={<DataUsageIcon />}\n\t\t\t\t\t\t\t\tonClick={generate_report.generate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGenerate Report\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\n\t\t\t\t{clear_filter ? (\n\t\t\t\t\t<Tooltip title={clear_filter.title}>\n\t\t\t\t\t\t<IconButton onClick={clear_filter.trigger}>\n\t\t\t\t\t\t\t<ClearIcon color=\"inherit\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t);\n\t};\n\n\treturn (\n\t\t<AppBar\n\t\t\tclassName={classes.searchBar}\n\t\t\tposition=\"static\"\n\t\t\tcolor=\"default\"\n\t\t\televation={0}\n\t\t>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<Grid container spacing={2} alignItems=\"center\">\n\t\t\t\t\t<Grid item md={12} sm={12}>\n\t\t\t\t\t\t<Typography>Table Filters</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{filters\n\t\t\t\t\t\t? filters.map((field, index) => {\n\t\t\t\t\t\t\t\treturn createFormFields(field, index);\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: \"\"}\n\n\t\t\t\t\t{extra_buttons ? createExtraButtons(extra_buttons) : \"\"}\n\t\t\t\t</Grid>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n","/app/src/api/TaskApi.js",["66"],"import Axios from \"axios\";\nconst END_POINT = \"http://localhost:5001\";\nexport default {\n\tasync getAll(params) {\n\t\treturn await Axios.get(`${END_POINT}/api/v1/tasks`, { params });\n\t},\n\n\tasync get(params) {\n\t\treturn await Axios.get(`${END_POINT}/api/v1/tasks`, { params });\n\t},\n\n\tasync insert(data) {\n\t\treturn await Axios.post(`${END_POINT}/api/v1/tasks`, data);\n\t},\n\n\tasync update(data) {\n\t\treturn await Axios.put(`${END_POINT}/api/v1/tasks/${data.id}`, data);\n\t},\n\n\tasync delete(data) {\n\t\treturn await Axios.delete(`${END_POINT}/api/v1/tasks/${data.id}`);\n\t},\n};\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":10,"column":4,"nodeType":"73","messageId":"74","endLine":10,"endColumn":40},{"ruleId":"75","severity":1,"message":"76","line":117,"column":18,"nodeType":"77","messageId":"78","endLine":117,"endColumn":28},{"ruleId":"79","severity":1,"message":"80","line":160,"column":5,"nodeType":"81","endLine":160,"endColumn":7,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":174,"column":35,"nodeType":"85","messageId":"86","endLine":174,"endColumn":37},{"ruleId":"75","severity":1,"message":"87","line":222,"column":8,"nodeType":"77","messageId":"78","endLine":222,"endColumn":23},{"ruleId":"75","severity":1,"message":"88","line":226,"column":8,"nodeType":"77","messageId":"78","endLine":226,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":244,"column":4,"nodeType":"91","messageId":"92","endLine":245,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":278,"column":3,"nodeType":"95","messageId":"96","endLine":288,"endColumn":4},{"ruleId":"83","severity":1,"message":"84","line":335,"column":43,"nodeType":"85","messageId":"86","endLine":335,"endColumn":45},{"ruleId":"75","severity":1,"message":"97","line":389,"column":9,"nodeType":"77","messageId":"78","endLine":389,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":110,"column":3,"nodeType":"95","messageId":"96","endLine":121,"endColumn":4},{"ruleId":"83","severity":1,"message":"98","line":124,"column":48,"nodeType":"85","messageId":"99","endLine":124,"endColumn":50},{"ruleId":"75","severity":1,"message":"100","line":125,"column":31,"nodeType":"77","messageId":"78","endLine":125,"endColumn":37},{"ruleId":"75","severity":1,"message":"101","line":19,"column":8,"nodeType":"77","messageId":"78","endLine":19,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":22,"column":3,"nodeType":"95","messageId":"96","endLine":54,"endColumn":4},{"ruleId":"93","severity":1,"message":"94","line":80,"column":3,"nodeType":"95","messageId":"96","endLine":93,"endColumn":4},{"ruleId":"102","severity":1,"message":"103","line":3,"column":1,"nodeType":"104","endLine":23,"endColumn":3},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'setFilters' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showForm'. Either include it or remove the dependency array.","ArrayExpression",["107"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleChkChange' is assigned a value but never used.","'createChk' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'res' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Render' is assigned a value but never used.","'classes' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [showForm]",{"range":"110","text":"111"},[3330,3332],"[showForm]"]