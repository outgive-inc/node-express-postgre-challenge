[{"/app/src/App.js":"1","/app/src/index.js":"2","/app/src/reportWebVitals.js":"3","/app/src/adapters/index.js":"4","/app/src/components/TaskList/index.js":"5","/app/src/components/TaskList/TaskListSkeleton.js":"6","/app/src/components/EmptyState.js":"7","/app/src/components/TaskHeader/index.js":"8","/app/src/components/TaskHeader/TaskHeader.js":"9","/app/src/components/index.js":"10","/app/src/pages/index.js":"11","/app/src/components/TaskModal/index.js":"12","/app/src/adapters/tasks.js":"13","/app/src/components/Form/index.js":"14","/app/src/components/Form/FormControl.js":"15","/app/src/components/TaskModal/CreateTaskModal/CreateTaskModal.js":"16","/app/src/components/TaskModal/CreateTaskModal/index.js":"17","/app/src/components/TaskModal/UpdateTaskModal/index.js":"18","/app/src/components/TaskModal/UpdateTaskModal/UpdateTaskModal.js":"19","/app/src/components/TaskModal/CreateTaskModal/CreateTaskBL.js":"20","/app/src/components/TaskModal/CreateTaskModal/createTaskBL.js":"21","/app/src/theme.js":"22","/app/src/components/TaskList/TaskList/TaskList.js":"23","/app/src/components/TaskList/TaskList/TaskListBL.js":"24","/app/src/components/TaskList/TaskList/index.js":"25","/app/src/components/TaskModal/DeleteTaskModal/index.js":"26","/app/src/components/TaskModal/DeleteTaskModal/DeleteTaskModal.js":"27","/app/src/components/TaskModal/DeleteTaskModal/DeleteTaskBL.js":"28","/app/src/pages/tasksPage/index.js":"29","/app/src/components/TaskModal/UpdateTaskModal/UpdateTaskBL.js":"30","/app/src/pages/tasksPage/tasksPage.js":"31","/app/src/pages/tasksPage/taskPageBL.js":"32","/app/src/pages/TasksPage/index.js":"33","/app/src/pages/TasksPage/TasksPage.js":"34","/app/src/pages/TasksPage/TaskPageBL.js":"35","/app/src/components/TaskList/TaskListItem/index.js":"36","/app/src/components/TaskList/TaskListItem/TaskListItem.js":"37","/app/src/components/TaskList/TaskListItem/TaskListItemBL.js":"38","/app/src/adapters/subTasks.js":"39"},{"size":456,"mtime":1629649068441,"results":"40","hashOfConfig":"41"},{"size":494,"mtime":1629488075447,"results":"42","hashOfConfig":"41"},{"size":375,"mtime":1629488075447,"results":"43","hashOfConfig":"41"},{"size":84,"mtime":1629656816576,"results":"44","hashOfConfig":"41"},{"size":141,"mtime":1629649475642,"results":"45","hashOfConfig":"41"},{"size":625,"mtime":1629645548515,"results":"46","hashOfConfig":"41"},{"size":236,"mtime":1629645621551,"results":"47","hashOfConfig":"41"},{"size":41,"mtime":1629615379121,"results":"48","hashOfConfig":"41"},{"size":531,"mtime":1629645584272,"results":"49","hashOfConfig":"41"},{"size":128,"mtime":1629615755376,"results":"50","hashOfConfig":"41"},{"size":56,"mtime":1629649086020,"results":"51","hashOfConfig":"41"},{"size":160,"mtime":1629646416635,"results":"52","hashOfConfig":"41"},{"size":1042,"mtime":1629660941399,"results":"53","hashOfConfig":"41"},{"size":43,"mtime":1629618636813,"results":"54","hashOfConfig":"41"},{"size":1152,"mtime":1629655898545,"results":"55","hashOfConfig":"41"},{"size":2891,"mtime":1629656850090,"results":"56","hashOfConfig":"41"},{"size":51,"mtime":1629618509684,"results":"57","hashOfConfig":"41"},{"size":51,"mtime":1629618566801,"results":"58","hashOfConfig":"41"},{"size":2785,"mtime":1629655421958,"results":"59","hashOfConfig":"41"},{"size":1626,"mtime":1629663508492,"results":"60","hashOfConfig":"41"},{"size":1364,"mtime":1629621588585,"results":"61","hashOfConfig":"41"},{"size":168,"mtime":1629639657069,"results":"62","hashOfConfig":"41"},{"size":1830,"mtime":1629649574562,"results":"63","hashOfConfig":"41"},{"size":1084,"mtime":1629663556929,"results":"64","hashOfConfig":"41"},{"size":37,"mtime":1629642377589,"results":"65","hashOfConfig":"41"},{"size":51,"mtime":1629646382634,"results":"66","hashOfConfig":"41"},{"size":1858,"mtime":1629659483485,"results":"67","hashOfConfig":"41"},{"size":1386,"mtime":1629659459512,"results":"68","hashOfConfig":"41"},{"size":56,"mtime":1629649093919,"results":"69","hashOfConfig":"41"},{"size":1590,"mtime":1629655400505,"results":"70","hashOfConfig":"41"},{"size":619,"mtime":1629649113852,"results":"71","hashOfConfig":"41"},{"size":1033,"mtime":1629649053307,"results":"72","hashOfConfig":"41"},{"size":56,"mtime":1629649093919,"results":"73","hashOfConfig":"41"},{"size":619,"mtime":1629649113852,"results":"74","hashOfConfig":"41"},{"size":1051,"mtime":1629659264472,"results":"75","hashOfConfig":"41"},{"size":45,"mtime":1629649464432,"results":"76","hashOfConfig":"41"},{"size":5549,"mtime":1629664623791,"results":"77","hashOfConfig":"41"},{"size":1808,"mtime":1629662840163,"results":"78","hashOfConfig":"41"},{"size":902,"mtime":1629660955259,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"b9oz7f",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/app/src/App.js",[],["166","167"],"/app/src/index.js",[],"/app/src/reportWebVitals.js",[],"/app/src/adapters/index.js",[],"/app/src/components/TaskList/index.js",[],"/app/src/components/TaskList/TaskListSkeleton.js",[],"/app/src/components/EmptyState.js",[],"/app/src/components/TaskHeader/index.js",[],"/app/src/components/TaskHeader/TaskHeader.js",[],"/app/src/components/index.js",[],"/app/src/pages/index.js",[],"/app/src/components/TaskModal/index.js",[],"/app/src/adapters/tasks.js",[],"/app/src/components/Form/index.js",[],"/app/src/components/Form/FormControl.js",[],"/app/src/components/TaskModal/CreateTaskModal/CreateTaskModal.js",[],"/app/src/components/TaskModal/CreateTaskModal/index.js",[],"/app/src/components/TaskModal/UpdateTaskModal/index.js",[],"/app/src/components/TaskModal/UpdateTaskModal/UpdateTaskModal.js",[],"/app/src/components/TaskModal/CreateTaskModal/CreateTaskBL.js",["168"],"import { useContext, useEffect, useState } from 'react'\r\nimport { TaskAdapter, SubTaskAdapter } from '../../../adapters'\r\nimport { TaskListContext } from '../../../pages'\r\n\r\nexport const CreateTaskBL = () => {\r\n    const { createModalOpen, setCreateModalOpen, setHasTaskEvent, subTaskTaskId, setSubTaskTaskId } = useContext(TaskListContext)\r\n\r\n    const [createBtnDisabled, setCreateBtnDisabled] = useState(false)\r\n    const [title, setTitle] = useState()\r\n    const [details, setDetails] = useState()\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const createTask = async (e) => {\r\n        setCreateBtnDisabled(!createBtnDisabled)\r\n        const { errors } = !subTaskTaskId \r\n            ? await TaskAdapter.createTask({title, details})\r\n            : await SubTaskAdapter.createSubTask({taskId: subTaskTaskId, title})\r\n\r\n        if (errors) return showErrors(errors)\r\n\r\n        setHasTaskEvent(true)\r\n        closeCreateTaskModal();\r\n    }\r\n\r\n    const showErrors = (errors) => {\r\n        setErrors(errors)\r\n        setCreateBtnDisabled(false)\r\n    }\r\n\r\n    const closeCreateTaskModal = () => {\r\n        setTitle()\r\n        setDetails()\r\n        setErrors({})\r\n        setCreateBtnDisabled(false)\r\n        setCreateModalOpen(false)\r\n        setSubTaskTaskId()\r\n    }\r\n\r\n    return {\r\n        subTaskTaskId,\r\n        createTask,\r\n\r\n        // Form Inputs\r\n        title, \r\n        setTitle,\r\n        details, \r\n        setDetails,\r\n        createBtnDisabled,\r\n\r\n        // Form Errors\r\n        errors,\r\n        setErrors,\r\n        \r\n        // Modal\r\n        createModalOpen, \r\n        closeCreateTaskModal\r\n    }\r\n}\r\n","/app/src/components/TaskModal/CreateTaskModal/createTaskBL.js",["169"],"/app/src/theme.js",[],"/app/src/components/TaskList/TaskList/TaskList.js",[],"/app/src/components/TaskList/TaskList/TaskListBL.js",["170"],"import { useContext, useEffect, useState } from \"react\"\r\nimport { TaskAdapter } from \"../../../adapters\"\r\nimport { TaskListContext } from \"../../../pages\"\r\n\r\nexport const TaskListBL = () => {\r\n    const {hasTaskEvent, setHasTaskEvent} = useContext(TaskListContext)\r\n    const [firstLoad, setFirstLoad] = useState(true)\r\n    const [tasks, setTasks] = useState([])\r\n    const [totalPage, setTotalPage] = useState(1)\r\n    const [page, setPage] = useState(1)\r\n\r\n    const fetchTasks = async () => {\r\n        if (hasTaskEvent) return setHasTaskEvent(false)\r\n    \r\n        const { tasks, page: currentPage, totalPage } = await TaskAdapter.getTasks(page)\r\n        \r\n        setTasks(tasks)\r\n        setPage(currentPage)\r\n        setTotalPage(totalPage)\r\n\r\n        if (firstLoad) return setFirstLoad(!firstLoad)\r\n    }\r\n\r\n    const handlePageClick = ({ selected }) => {\r\n        setPage(selected + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTasks()\r\n    }, [hasTaskEvent, page])    \r\n\r\n    return {\r\n        tasks,\r\n        page,\r\n        totalPage,\r\n        handlePageClick\r\n    }\r\n}\r\n","/app/src/components/TaskList/TaskList/index.js",[],"/app/src/components/TaskModal/DeleteTaskModal/index.js",[],"/app/src/components/TaskModal/DeleteTaskModal/DeleteTaskModal.js",[],"/app/src/components/TaskModal/DeleteTaskModal/DeleteTaskBL.js",["171"],"import { useContext, useEffect, useRef, useState } from 'react'\r\nimport { SubTaskAdapter, TaskAdapter } from '../../../adapters'\r\nimport { TaskListContext } from '../../../pages'\r\n\r\nexport const DeleteTaskBL = () => {\r\n    const { \r\n        deleteModalOpen, \r\n        setDeleteModalOpen, \r\n        deleteTaskId, \r\n        setDeleteTaskId, \r\n        deleteSubTask,\r\n        setDeleteSubTask,\r\n        setHasTaskEvent \r\n    } = useContext(TaskListContext)\r\n    const [deleteBtnDisabled, setDeleteBtnDisabled] = useState(false)\r\n\r\n    const taskIdRef = useRef()\r\n\r\n    const deleteTask = async (e) => {\r\n        setDeleteBtnDisabled(!deleteBtnDisabled)\r\n        const res = !deleteSubTask\r\n            ? await TaskAdapter.deleteTask(deleteTaskId)\r\n            : await SubTaskAdapter.deleteSubTask(deleteTaskId)\r\n            \r\n        setHasTaskEvent(true)\r\n        setDeleteSubTask(!deleteSubTask)\r\n        closeDeleteTaskModal();\r\n    }\r\n\r\n    const closeDeleteTaskModal = () => {\r\n        setDeleteTaskId()\r\n        setDeleteBtnDisabled(false)\r\n        setDeleteModalOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    return {\r\n        deleteTaskId,\r\n        deleteTask,\r\n        deleteSubTask,\r\n\r\n        // Form Inputs\r\n        taskIdRef,\r\n        deleteBtnDisabled,\r\n        \r\n        // Modal\r\n        deleteModalOpen, \r\n        closeDeleteTaskModal\r\n    }\r\n}\r\n","/app/src/pages/tasksPage/index.js",[],["172","173"],"/app/src/components/TaskModal/UpdateTaskModal/UpdateTaskBL.js",["174"],"import { useContext, useEffect, useRef, useState } from 'react'\r\nimport { TaskAdapter } from '../../../adapters'\r\nimport { TaskListContext } from '../../../pages'\r\n\r\nexport const UpdateTaskBL = () => {\r\n    const { \r\n        updateModalOpen, \r\n        setUpdateModalOpen,\r\n        updateTaskData,\r\n        setHasTaskEvent \r\n    } = useContext(TaskListContext)\r\n\r\n    const [updateBtnDisabled, setUpdateBtnDisabled] = useState(false)\r\n    const [title, setTitle] = useState()\r\n    const [details, setDetails] = useState()\r\n    const [errors, setErrors] = useState()\r\n\r\n    const updateTask = async (e) => {\r\n        setUpdateBtnDisabled(!updateBtnDisabled)\r\n        await TaskAdapter.updateTask({\r\n            taskId: updateTaskData.taskId,\r\n            title,\r\n            details\r\n        })\r\n        setHasTaskEvent(true)\r\n        closeCreateTaskModal();\r\n    }\r\n\r\n    const closeCreateTaskModal = () => {\r\n        setTitle()\r\n        setDetails()\r\n        setErrors({})\r\n        setUpdateBtnDisabled(false)\r\n        setUpdateModalOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (updateTaskData) {\r\n            setTitle(updateTaskData.title)\r\n            setDetails(updateTaskData.details)\r\n        }\r\n    }, [updateTaskData])\r\n\r\n    return {\r\n        updateTask,\r\n\r\n        // Form Inputs\r\n        title,\r\n        details,\r\n        setTitle,\r\n        setDetails,\r\n        updateBtnDisabled,\r\n\r\n        // Form Errors\r\n        errors,\r\n        setErrors,\r\n        \r\n        // Modal\r\n        updateModalOpen,\r\n        setUpdateModalOpen, \r\n        closeCreateTaskModal\r\n    }\r\n}\r\n","/app/src/pages/tasksPage/tasksPage.js",[],"/app/src/pages/tasksPage/taskPageBL.js",["175","176","177","178","179","180","181","182"],"/app/src/pages/TasksPage/index.js",[],"/app/src/pages/TasksPage/TasksPage.js",[],"/app/src/pages/TasksPage/TaskPageBL.js",[],"/app/src/components/TaskList/TaskListItem/index.js",[],"/app/src/components/TaskList/TaskListItem/TaskListItem.js",["183"],"import { Box, Checkbox, IconButton, Text } from '@chakra-ui/react'\r\nimport { EditIcon, DeleteIcon, ChevronUpIcon, ChevronDownIcon, PlusSquareIcon } from '@chakra-ui/icons'\r\nimport { TaskListItemBL } from './TaskListItemBL'\r\n\r\nexport const TaskListItem = ({ task, isSubTask = false }) => {\r\n    const {\r\n        subTasks,\r\n        isCollapsed,\r\n        setIsCollapsed,\r\n        initUpdateModal,\r\n        initDeleteModal,\r\n        initCreateModal,\r\n        updateTaskStatus\r\n    } = TaskListItemBL({task})\r\n\r\n    return (\r\n        <>\r\n            <Box boxShadow=\"base\" p=\"6\" rounded=\"2xl\" bg={!isSubTask ? \"white\" : \"whiteAlpha.200\"} ml={!isSubTask ? '' : \"50px\"}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <Checkbox \r\n                        mr=\"15px\" \r\n                        colorScheme=\"green\" \r\n                        onChange={() => updateTaskStatus({\r\n                            id: task[!isSubTask ? 'taskId' : 'subTaskId'],\r\n                            completed: !task.completed,\r\n                            isSubTask\r\n                        })}\r\n                        isChecked={task.completed}\r\n                        defaultChecked={task.completed}\r\n                    />\r\n                    <Text fontSize=\"lg\" w=\"100%\" isTruncated as={task.completed ? \"del\" : \"\"}>{task.title}</Text>\r\n                    \r\n                    <Box display=\"flex\">\r\n                        {\r\n                            !isSubTask \r\n                            ? (\r\n                                <>\r\n                                    <IconButton \r\n                                        size=\"sm\"\r\n                                        variant=\"ghost\" \r\n                                        color=\"gray\" \r\n                                        title=\"Add Subtask\"\r\n                                        onClick={() => initCreateModal({taskId: task.taskId})}\r\n                                        icon={<PlusSquareIcon w=\"18px\" h=\"18px\" /> } \r\n                                    />\r\n                                    <IconButton \r\n                                        size=\"sm\"\r\n                                        variant=\"ghost\" \r\n                                        color=\"gray\" \r\n                                        title=\"Edit Task\"\r\n                                        onClick={() => initUpdateModal(task)}\r\n                                        icon={<EditIcon w=\"18px\" h=\"18px\" /> } \r\n                                    />\r\n                                </>   \r\n                            ) : ''\r\n                        }\r\n\r\n                        <IconButton \r\n                            size=\"sm\"\r\n                            variant=\"ghost\" \r\n                            color=\"gray\"\r\n                            title=\"Delete Task\"\r\n                            onClick={() => initDeleteModal({id: task[!isSubTask ? 'taskId' : 'subTaskId'], isSubTask})}\r\n                            icon={<DeleteIcon w=\"18px\" h=\"18px\" /> } \r\n                        />\r\n\r\n                        {\r\n                            !isSubTask \r\n                            ? (\r\n                                <>\r\n                                    {\r\n                                        task.SubTasks && task.SubTasks.length !== 0\r\n                                        ? (\r\n                                            isCollapsed\r\n                                            ? <IconButton \r\n                                                onClick={() => setIsCollapsed(!isCollapsed)} \r\n                                                size=\"sm\"\r\n                                                variant=\"ghost\" \r\n                                                color=\"gray\" \r\n                                                title=\"View Subtasks\"\r\n                                                icon={<ChevronUpIcon w=\"18px\" h=\"18px\" />} \r\n                                                />\r\n                                            : <IconButton \r\n                                                onClick={() => setIsCollapsed(!isCollapsed)} \r\n                                                size=\"sm\"\r\n                                                variant=\"ghost\" \r\n                                                color=\"gray\"\r\n                                                title=\"Hide Subtasks\"\r\n                                                icon={<ChevronDownIcon w=\"18px\" h=\"18px\" />} \r\n                                            />\r\n                                        )\r\n                                        : null\r\n                                    }\r\n                                </>\r\n                            ) : ''\r\n                        }\r\n            \r\n                    </Box>\r\n                </Box>\r\n                \r\n                {\r\n                    task.details \r\n                    ? <Box display=\"flex\" alignItems=\"center\" pt=\"10px\" px=\"35px\" color=\"gray.500\">\r\n                        <Text fontSize=\"sm\" pr=\"5px\">Details:</Text>\r\n                        <Text fontSize=\"sm\" isTruncated>{task.details}</Text>\r\n                    </Box> \r\n                    : ''\r\n                }\r\n            </Box>\r\n\r\n            {\r\n                task.SubTasks && task.SubTasks.length !== 0 && !isCollapsed \r\n                ? task.SubTasks.map((subTask, i) => (\r\n                    <TaskListItem isSubTask task={subTask} key={i} />\r\n                ))\r\n                : ''\r\n            }\r\n        </>\r\n    )\r\n}\r\n","/app/src/components/TaskList/TaskListItem/TaskListItemBL.js",["184","185"],"import { useContext, useEffect, useState } from 'react'\r\nimport { SubTaskAdapter, TaskAdapter } from '../../../adapters'\r\nimport { TaskListContext } from '../../../pages'\r\n\r\nexport const TaskListItemBL = ({ task }) => {\r\n    const { \r\n        createTaskModalOpen,\r\n        setCreateModalOpen,\r\n\r\n        updateModalOpen,\r\n        setUpdateModalOpen,\r\n\r\n        deleteModalOpen, \r\n        setDeleteModalOpen, \r\n\r\n        setDeleteTaskId,\r\n        setDeleteSubTask,\r\n        setUpdateTaskData,\r\n\r\n        setSubTaskTaskId,\r\n        hasTaskEvent,\r\n        setHasTaskEvent\r\n    } = useContext(TaskListContext)\r\n\r\n    const [subTasks, setSubTasks] = useState([])\r\n    const [isCollapsed, setIsCollapsed] = useState(true)\r\n\r\n    const initDeleteModal = ({ id, isSubTask }) => {\r\n        setDeleteModalOpen(!deleteModalOpen)\r\n        setDeleteTaskId(id)\r\n        setDeleteSubTask(isSubTask)\r\n    }\r\n\r\n    const initUpdateModal = ({ taskId, title, details }) => {\r\n        setUpdateTaskData({ taskId, title, details })\r\n        setUpdateModalOpen(!updateModalOpen)\r\n    }\r\n\r\n    const initCreateModal = ({ taskId }) => {\r\n        setSubTaskTaskId(taskId)\r\n        setCreateModalOpen(!createTaskModalOpen)\r\n    }\r\n\r\n    const updateTaskStatus = async ({ id, completed, isSubTask = false }) => {\r\n        const res = !isSubTask \r\n            ? await TaskAdapter.updateTask({taskId: id, completed, isSubTask})\r\n            : await SubTaskAdapter.updateSubTask({subTaskId: id, completed, isSubTask})\r\n        setHasTaskEvent(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSubTasks(task.SubTasks)\r\n    }, [hasTaskEvent])\r\n\r\n    return {\r\n        subTasks,\r\n        isCollapsed,\r\n        setIsCollapsed,\r\n        initUpdateModal,\r\n        initDeleteModal,\r\n        initCreateModal,\r\n        updateTaskStatus\r\n    }\r\n}\r\n","/app/src/adapters/subTasks.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":1,"column":22,"nodeType":"192","messageId":"193","endLine":1,"endColumn":31},{"ruleId":"190","severity":1,"message":"194","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":30,"column":8,"nodeType":"197","endLine":30,"endColumn":28,"suggestions":"198"},{"ruleId":"190","severity":1,"message":"199","line":21,"column":15,"nodeType":"192","messageId":"193","endLine":21,"endColumn":18},{"ruleId":"186","replacedBy":"200"},{"ruleId":"188","replacedBy":"201"},{"ruleId":"190","severity":1,"message":"202","line":1,"column":33,"nodeType":"192","messageId":"193","endLine":1,"endColumn":39},{"ruleId":"203","severity":2,"message":"204","line":4,"column":51,"nodeType":"192","endLine":4,"endColumn":59},{"ruleId":"203","severity":2,"message":"204","line":5,"column":51,"nodeType":"192","endLine":5,"endColumn":59},{"ruleId":"203","severity":2,"message":"204","line":6,"column":51,"nodeType":"192","endLine":6,"endColumn":59},{"ruleId":"203","severity":2,"message":"204","line":7,"column":45,"nodeType":"192","endLine":7,"endColumn":53},{"ruleId":"203","severity":2,"message":"204","line":9,"column":45,"nodeType":"192","endLine":9,"endColumn":53},{"ruleId":"203","severity":2,"message":"204","line":10,"column":51,"nodeType":"192","endLine":10,"endColumn":59},{"ruleId":"203","severity":2,"message":"204","line":11,"column":55,"nodeType":"192","endLine":11,"endColumn":63},{"ruleId":"203","severity":2,"message":"204","line":13,"column":45,"nodeType":"192","endLine":13,"endColumn":53},{"ruleId":"190","severity":1,"message":"205","line":7,"column":9,"nodeType":"192","messageId":"193","endLine":7,"endColumn":17},{"ruleId":"190","severity":1,"message":"199","line":45,"column":15,"nodeType":"192","messageId":"193","endLine":45,"endColumn":18},{"ruleId":"195","severity":1,"message":"206","line":53,"column":8,"nodeType":"197","endLine":53,"endColumn":22,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'TaskAdapter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTasks'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'res' is assigned a value but never used.",["208"],["209"],"'useRef' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"tasksPageBL\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'subTasks' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'task.SubTasks'. Either include it or remove the dependency array. If 'setSubTasks' needs the current value of 'task.SubTasks', you can also switch to useReducer instead of useState and read 'task.SubTasks' in the reducer.",["211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [fetchTasks, hasTaskEvent, page]",{"range":"216","text":"217"},"Update the dependencies array to be: [hasTaskEvent, task.SubTasks]",{"range":"218","text":"219"},[955,975],"[fetchTasks, hasTaskEvent, page]",[1595,1609],"[hasTaskEvent, task.SubTasks]"]